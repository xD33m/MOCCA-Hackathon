name: Stable release

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
    types: [closed]
  workflow_dispatch:
    inputs:
      branch:
        description: "Branch to build and deploy from"
        required: true
        default: "main"

env:
  REGISTRY: ghcr.io
  WEB_IMAGE: ghcr.io/xD33m/mocca-hackathon

jobs:
  docker-build-and-push:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - dockerfile: ./frontend/Dockerfile
            image: ghcr.io/xD33m/mocca-hackathon
            path: ./frontend
            name: frontend
    name: Build & deploy ${{ matrix.name }} image üöÄ
    permissions:
      contents: read
      packages: write

    steps:
      # Access Repository in action
      - name: Checkout ‚¨áÔ∏è
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.branch }}

      - name: Get current date ‚åõ
        id: date
        run: echo "date=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT

      - name: Get commit hash ‚öôÔ∏è
        id: sha
        run: echo "sha=${GITHUB_SHA::7}" >> $GITHUB_OUTPUT

      # action can be useful if you want to add emulation support with QEMU
      # to be able to build against more platforms.
      - name: Configure QEMU ‚öôÔ∏è
        uses: docker/setup-qemu-action@v3
      # action will create and boot a builder using by default the docker-container builder driver.
      # This is not required but recommended using it to be able to build multi-platform images, export cache, etc.
      - name: Configure Docker Buildx ‚öôÔ∏è
        uses: docker/setup-buildx-action@v3

      - name: Login to Github Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ matrix.image }}

      - name: Build and push images üõ†Ô∏è
        uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.path }}
          file: ${{ matrix.dockerfile }}
          tags: |
            ${{ matrix.image }}:${{ ((github.event_name == 'push' && github.ref_name == 'main') || (github.event_name == 'pull_request' && github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'main')) && 'latest' || github.event.inputs.branch || github.ref_name }}
            ${{ matrix.image }}:${{ github.event.inputs.branch || github.ref_name }}.${{ steps.date.outputs.date }}.${{ steps.sha.outputs.sha }}
            ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/arm64
          push: true
          cache-from: |
            type=registry,ref=${{ matrix.image }}:buildcache
          cache-to: |
            type=registry,ref=${{ matrix.image }}:buildcache,mode=max

  run-on-pi:
    runs-on: self-hosted # Raspberry Pi
    # environment: production
    needs: docker-build-and-push
    steps:
      # Checkout repo to get docker compose file (can maybe provided from previous job later)
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.branch }}

      - name: Login to Github Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Pull latest web image
        run: |
          if [ "${{ (github.event_name == 'push' && github.ref_name == 'main') || (github.event_name == 'pull_request' && github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'main') }}" = "true" ]; then
            docker pull ${{ env.WEB_IMAGE }}:latest
          else
            docker pull ${{ env.WEB_IMAGE }}:${{ github.event.inputs.branch || github.ref_name }}
          fi

      - name: Run docker image
        run: docker compose up -d --build

      - name: Remove old unused image
        run: docker image prune -a -f --filter "label=name=hackathon"